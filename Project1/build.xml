<project name="Project 1" default="compile" basedir=".">

	<description>
		A build file for project 1!
	</description>
			
	<!-- properties -->
	<property name="source.dir" location="src"/>
	<property name="build.dir" location="bin"/>
	<property name="doc.dir" location="doc"/>
	<property name="dist.dir" location="dist" />
	<property name='test.dir' location="test"/>
	<property name="lib.dir" location="lib" />

	<!-- set up some directories used by this project -->
	<target name="init" description="Initialize Directories">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${doc.dir}" />
	</target>
	
	<path id="classPath">
	    <pathelement location="lib/junit-4.12.jar"/>
	    <pathelement location="lib/hamcrest-core-1.3.jar"/>
	 </path>

	<!-- Compile the java code in src dir into build dir -->
	<target  name="compile" depends="init" description="Compile the Code" >
		<javac includeantruntime="false" srcdir="${source.dir}" destdir="${build.dir}" >
			<classpath refid="classpath.test"/>
		</javac>
	</target>

	<!-- Generate javadocs for current project into docs dir -->
	<target name="doc" depends="init" description="Create Documentation">
		<javadoc sourcepath="${source.dir}" destdir="${doc.dir}" >
			<classpath refid="classPath"/>
			<fileset dir="${source.dir}" defaultexcludes="yes">
			</fileset>
		</javadoc>
	</target>

	<!-- Delete the build & doc directories and Emacs backup (*~) files -->
	<target name="clean" description="Remove Redundant Files">
		<delete dir="${build.dir}" />
		<delete dir="${doc.dir}" />
		<delete dir="${dist.dir}" />
		<delete>
			<fileset defaultexcludes="no" dir="${source.dir}" includes="*/~" />
		</delete>
	</target>

	<target name="dist" depends="compile" description="Create the Object">
		<jar jarfile="${dist.dir}/Project1.jar" basedir="${build.dir}" includes="**">
			<manifest>
				<attribute name="Main" value="SearchMap" />
			</manifest>
		</jar>
	</target>
	
	<target name="test-compile" depends="compile">
		<javac srcdir="${source.dir}" destdir="${build.dir}" includeantruntime="false">
			<classpath refid="classPath"/>
		</javac>
		</target>
	
	<target name="test" depends="test-compile">
		<junit printsummary="on" haltonfailure="yes" fork= "true">
			<classpath>
				<path refid="classPath"/>
				<pathelement location="${source.dir}" />
			</classpath>
			<formatter type="brief" usefile="false"/>
			<batchtest>
				<fileset dir="${source.dir}" includes="**/Test*.java"/>
			</batchtest>
		</junit>
	</target>
</project>
